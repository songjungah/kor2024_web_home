.[ 롬복 ]
     1. 정의 : 반복되는 코드들을 줄여주는 라이브러리
     2. 내 프로젝트의 롬복 적용/설치 하는 방법
         1. 롬복 관련 build.gradle 에 의존성을 추가한다. (프로젝트마다 추가)
         [ 의존성 검색/추가 : 1. https://start.spring.io/
                           2. https://mvnrepository.com/ ]
           compileOnly 'org.projectlombok:lombok'
           annotationProcessor 'org.projectlombok:lombok'

         2. 인텔리제이 롬복 설치(인텔리제이 마다 1번 추가)
             1. 상단 메뉴 - [File] - [Settings]
             2. 사이드 메뉴 [plugins] - LOMPOK 검색 - install

     3. 제공 : @어노테이션 이용
         1. 생성자를 대신 만들어준다.
             디폴트 생성자 : @NoArgsConstructor
             모든 매개변수 생정자 : @AllArgsContructor
         2. getter / setter 메소드 대신 만들어준다.
             @Getter     : 멤버변수의 getter 메소드
             @Setter     : 멤버변수의 setter 메소드
         3. toString 메소드 대신 만들어준다.
             @ToString   : toString 메소드
         4. 빌더 패턴을 지원한다.
             @Builder    : **

     4. 빌더 패턴 : 인스턴스(객체) 만드는 패턴
         1. 정의 : 생성자의 단점을 보완     * new 키워드없이 인스턴스 만들기
         2. 사용법 :
             - 전제조건 : 해당 클래스가 @Builder 이면 가능하다.
             - 클래스명.builder()        => builder() 는 스태틱함수
                 .멤버변수명(대입할 값)
                 .멤버변수명(대입할 값)
                 .build();
         3. 목적 : 인스턴스 생성시 초기화를 조금 더 유연하게 하기 위해서 자바의 기본 문법 생성자 대신 빌더패턴 사용



 * 생성자란?
     - new 뒤에 사용하면서 인스턴스(객체)를 생성할 때 멤버변수를 초기화하는 메소드
     - 단점 이자 생성자 사용 규칙 :
         1. 상황에 따라 초기화가 다르면 여러 생성자가 필요하다. [오버로딩]
         2. 생성자 관리가 힘들다.
         3. 매개변수 순서와 개수를 인수값과 일치해야 한다.