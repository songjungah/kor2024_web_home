[ 웹 과제4 ]
    선택1(복습과제) : day57task -> Spring MVC 패키지/클래스 기본 어노테이션 세팅 연습 3번

    선택2(활용과제) :
        day57task 셋팅된 코드에서
            1. 점수 등록
            2. 전체 점수 출력
            3. 특정 학생 점수 수정
            4. 특정 학생 점수 삭제
            구축하기.

            조건 : C -> S -> D 순서는 깨지면 안됨.

주제 : 학생들의 점수를 관리하는 RESTful API 구축
    1. day57task 폴더에 Spring mvc2 3tire 에 따른 패키지/클래스 구성
    2. 아래 5개 클래스를 구성하여 구축하시오.
        'AppStart', 'stydentController', 'studentService', 'StudentDao', 'StudentDto'
    3. 학생 필드 : 학생번호, 학생이름, 국어점수, 수학점수, 영어점수
    4. Talend API 테스트 진행하기
    5. DB/테이블명은 임의로 생성하기

[ 1. DB/Table 설계하기 ]
    drop database if exists mydb0107;
    create database mydb0107;
    use mydb0107;
    create table student(
    	sno int auto_increment,
        sname varchar(30) not null,
        skor int,
        smath int,
        seng int,
        primary key(sno)
    );

[ 2. DTO 코드 작성 ] : DTO란?    VIEW <----- DTO -----> DB
    - 주로 db테이블의 속성과 dto 멤버변수는 유사한다      * 커스텀
    - @NoArgsConstructor      // 디폴트 생성자 주입
      @AllArgsConstructor     // 모든 매개변수 생성자 주입
      @Getter                 // 각 멤버변수의 getter 메소드 주입
      @Setter                 // 각 멤버변수의 setter 메소드 주입
      @ToString               // 참조(주소)값 대신 멤버변수 호출 메소드 주입
      @Builder                // 생성자 대신 인스턴스(객체) 만드는 빌더 패턴 주입

[ 3. MVC 클래스 구성 ]
    - StudentController : @RestController 표시/스티커
    - StudentDao        : @Component 표시/스티커
    - StudentService    : @Service 표시/스티커

    * 싱글톤이란? 프로그램 내 하나의 객체가 존재하도록 설계한 싱글톤 패턴
    * Spring 은 객체관리 대신 해준다. > IOC(제어역전) DI(의존성주입)
        - 특정 스티커(어노테이션)로 표시된 클래스들의 객체들만 관리한다.
        - MVC 관련 어노테이션 : @Controller / @RestController / @Service / @Repository / @Conponent 등

[ 순서 ]
Controller -> Service -> Dao -> Service -> Controller

[ Spring 아키텍쳐 ]

[ Spring IOC ] : 제어반전
[ Spring Di ]